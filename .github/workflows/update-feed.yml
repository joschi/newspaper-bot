# yaml-language-server: $schema=https://www.schemastore.org/github-workflow.json
name: Update feed
on:
  schedule:
    # This will run every ten minutes. Alter it using https://crontab.guru/.
    - cron: '*/10 * * * *'  
  workflow_dispatch:
jobs:
  mastodon:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "bnn"
            rss-feed: "https://bnn.de/feed"
            api-endpoint: "https://sueden.social"
            token-secret: MASTODON_ACCESS_TOKEN
    steps:
      - name: Generate cache key
        uses: actions/github-script@v7
        id: generate-key
        with:
          script: |
            core.setOutput('cache-key', new Date().valueOf())
      - name: Retrieve cache
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/mastofeedbot
          key: mastodon-${{ matrix.name }}-${{ steps.generate-key.outputs.cache-key }}
          restore-keys: |
            mastodon-${{ matrix.name }}-
      - name: GitHub
        uses: 'joschi/mastofeedbot@v0.2.0'
        with:
          rss-feed: ${{ matrix.rss-feed }}
          # Visibility of the posted status (public | unlisted | private | direct)
          status-visibility: unlisted
          dry-run: false
          template: |
            {{{item.title}}}

            {{{item.link}}}

            {{{item.description}}}
          api-endpoint: ${{ matrix.api-endpoint}}
          api-token: ${{ secrets[matrix.token-secret] }}
          cache-file: ${{ github.workspace }}/mastofeedbot/${{ matrix.name }}.json
          cache-limit: 1000

  bluesky:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "bnn"
            rss-feed: "https://bnn.de/feed"
            username-secret: BLUESKY_USERNAME
            password-secret: BLUESKY_PASSWORD
    steps:
      - name: Generate cache key
        uses: actions/github-script@v7
        id: generate-key
        with:
          script: |
            core.setOutput('cache-key', new Date().valueOf())
      - name: Retrieve cache
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/blueskyfeedbot
          key: bluesky-${{ matrix.name }}-${{ steps.generate-key.outputs.cache-key }}
          restore-keys: |
            bluesky-${{ matrix.name }}
      - name: Post to Bluesky
        uses: 'joschi/blueskyfeedbot@v0.0.4'
        with:
          rss-feed: ${{ matrix.rss-feed }}
          dry-run: false
          template: |
            {{{item.title}}}

            {{{item.link}}}
          username: ${{ secrets[matrix.username-secret] }}
          password: ${{ secrets[matrix.password-secret] }}
          cache-file: ${{ github.workspace }}/blueskyfeedbot/${{ matrix.name }}.json
          cache-limit: 1000
